/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ESNCleaning.java
 *
 * Created on Jul 26, 2011, 12:44:57 PM
 */
package my.ccaregui;

/**
 *
 * @author Expresso BRM
 */
import java.sql.*;
import javax.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JDialog;

import java.util.Calendar;
import java.text.SimpleDateFormat;

public class ESNCleaning extends javax.swing.JFrame {

   ConnectDB cnn = new ConnectDB();
   Connection con =  cnn.getConnection();
   
    Calendar currentDate = Calendar.getInstance();
    SimpleDateFormat formatter= new SimpleDateFormat("dd-MMM-yyyy HH:mm:ss");
    //new SimpleDateFormat("yyyy/MMM/dd HH:mm:ss");
    String dateNow = formatter.format(currentDate.getTime());
    /** Creates new form ESNCleaning */
    
    public ESNCleaning() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtESN = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        btnCleanUp = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        optETGOwn = new javax.swing.JRadioButton();
        optCustOwn = new javax.swing.JRadioButton();
        chkForceCleanup = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EXPRESSO TELECOM GH");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30));
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ESN CLEAN-UP'S");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Enter ESN");

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 14));
        lblStatus.setForeground(new java.awt.Color(153, 0, 51));
        lblStatus.setText("ESN Status");

        btnCleanUp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCleanUp.setText("Clean Up");
        btnCleanUp.setEnabled(false);
        btnCleanUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanUpActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 12));
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        buttonGroup1.add(optETGOwn);
        optETGOwn.setFont(new java.awt.Font("Tahoma", 1, 12));
        optETGOwn.setText("ETG Own");

        buttonGroup1.add(optCustOwn);
        optCustOwn.setFont(new java.awt.Font("Tahoma", 1, 12));
        optCustOwn.setText("Customer Own");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optCustOwn)
                    .addComponent(optETGOwn))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(optCustOwn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(optETGOwn)
                .addGap(15, 15, 15))
        );

        chkForceCleanup.setFont(new java.awt.Font("Tahoma", 1, 12));
        chkForceCleanup.setForeground(new java.awt.Color(153, 0, 0));
        chkForceCleanup.setText("Manual Clean-up (Customer own)");
        chkForceCleanup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkForceCleanupMouseClicked(evt);
            }
        });
        chkForceCleanup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkForceCleanupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCleanUp, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblStatus)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtESN, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(12, 12, 12)))
                        .addGap(12, 12, 12))
                    .addComponent(chkForceCleanup, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtESN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(18, 18, 18)
                .addComponent(lblStatus)
                .addGap(8, 8, 8)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkForceCleanup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCleanUp)
                    .addComponent(btnClose))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String myInput;
    String myState;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
          setLocationRelativeTo(null);
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
       if (con==null){
          ConnectDB cnn = new ConnectDB();
          Connection con =  cnn.getConnection();
       }
    
       try
        { 
         
         if (txtESN.getText().length()>=8){
          //btnFind.setEnabled(false);
          optETGOwn.setSelected(false);
          optCustOwn.setSelected(false);
          lblStatus.setText("");
          myInput = txtESN.getText().trim();
          
          
          Statement s = con.createStatement();
          String select = "Select State_ID, Source, Device_ID from Device_t where Device_ID = '" + myInput + "'";
          ResultSet rows;
          rows = s.executeQuery(select);
          
          
              int cnt=0;
              while (rows.next()) {
                  cnt++; 
                  if (String.valueOf(rows.getString(1)).equals("2")){
                        myState=String.valueOf(rows.getString(1));
                        
                        lblStatus.setText("Assigned");
                        btnCleanUp.setEnabled(false);
                        if (String.valueOf(rows.getString(2)).equals("ETG")){
                           optETGOwn.setSelected(true);
                        }
                        else {
                            optCustOwn.setSelected(true);
                        }
                       
                     }
                    else if (String.valueOf(rows.getString(1)).equals("3")){
                         lblStatus.setText("Quarantine");
                         optETGOwn.setSelected(false);
                         optCustOwn.setSelected(false);
                         btnCleanUp.setEnabled(true);
                    }
                    else {
                         lblStatus.setText("Not Assinged");
                         optETGOwn.setSelected(false);
                         optCustOwn.setSelected(false);
                         btnCleanUp.setEnabled(true);
                    }

              }
             s.close();
             rows.close();
             if (cnt<1){
                  JOptionPane.showMessageDialog(null, "Record not found, Can be used as Customer own Non Programmable handset ESN");
                  //btnFind.setEnabled(true);
              }
         }
         else{
             JOptionPane.showMessageDialog(null, "Enter Valid ESN; 8 or more Characters");
             //btnFind.setEnabled(true);
             txtESN.requestFocus();
         }
        }
        catch (SQLException e)
        {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void chkForceCleanupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkForceCleanupActionPerformed
//       if (){
//
//       }
    }//GEN-LAST:event_chkForceCleanupActionPerformed

    private void chkForceCleanupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkForceCleanupMouseClicked
        if (chkForceCleanup.isSelected()){
            btnCleanUp.setEnabled(true);
        }
        else{
             btnCleanUp.setEnabled(false);
        }
    }//GEN-LAST:event_chkForceCleanupMouseClicked

    private void btnCleanUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanUpActionPerformed
       if (con==null){
          ConnectDB cnn = new ConnectDB();
          Connection con =  cnn.getConnection();
       }        
        //Clean up as customer own
        JDialog.setDefaultLookAndFeelDecorated(true);
        int response = JOptionPane.showConfirmDialog(null, "Do you want to continue?", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION){

              if (optCustOwn.isSelected()){
                if (chkForceCleanup.isSelected()){
                    try{

                      con.setAutoCommit(false);
                      //String myInput = txtESN.getText().trim();
                      Statement s = con.createStatement();
                      s.executeUpdate("delete from device_t where device_id = '" + myInput + "'");
                      con.commit();

                      Statement y = con.createStatement();
                      y.executeUpdate("delete from device_handset_t where esn = '" + myInput + "'");
                      con.commit();
                      
                      //Insert new records into AuditTrail
                      con.setAutoCommit(false);
                      Statement z = con.createStatement();
                      z.executeUpdate("insert into ETGAUDITTRAIL(USERID, TRANSACTION, TDATE, TRANSTYPE) VALUES( '" + MainMenu.mnUserID + "', '" + myInput + "', '" + dateNow + "' ,'CO ESN Clean-up')");
                      con.commit();
                      z.close();

                      btnCleanUp.setEnabled(false);
                      chkForceCleanup.setSelected(false);
                      optCustOwn.setSelected(false);
                      JOptionPane.showMessageDialog(null, "Customer Own Clean-up Completed");
                      txtESN.setText("");
                      txtESN.requestFocus();
                     // btnFind.setEnabled(true);
                        s.close();                                            
             
                    }
                    catch(SQLException e){
                       System.out.println(e.getMessage());
                    }

                }
                else {
                    try{

                       if (myState=="2"){
                           JOptionPane.showMessageDialog(null, "The ESN is Assigned");

                       }
                       else {
                          con.setAutoCommit(false);
                          //String myInput = txtMDN.getText().trim();
                          Statement s = con.createStatement();
                          s.executeUpdate("delete from device_t where device_id = '" + myInput + "'");
                          con.commit();

                          Statement y = con.createStatement();
                          y.executeUpdate("delete from device_handset_t where esn = '" + myInput + "'");
                          con.commit();

                          //Insert new records into AuditTrail
                          con.setAutoCommit(false);
                          Statement z = con.createStatement();
                          z.executeUpdate("insert into ETGAUDITTRAIL(USERID, TRANSACTION, TDATE, TRANSTYPE) VALUES( '" + MainMenu.mnUserID + "', '" + myInput + "', '" + dateNow + "' ,'CO ESN Clean-up')");
                          con.commit();
                          z.close();
                          
                          btnCleanUp.setEnabled(false);
                          chkForceCleanup.setSelected(false);
                          optCustOwn.setSelected(false);
                          JOptionPane.showMessageDialog(null, "Customer Own Clean-up Completed");
                          txtESN.setText("");
                          txtESN.requestFocus();
                          //btnFind.setEnabled(true);
                            s.close();
            
                      }
                    }
                    catch(SQLException e){
                       System.out.println(e.getMessage());
                    }

                }
            }

            //Clean up as ETG own
            else if (optETGOwn.isSelected()){
                if (chkForceCleanup.isSelected()){
                    try{

                      con.setAutoCommit(false);
                      Statement s = con.createStatement();
                      s.executeUpdate("UPDATE device_t SET STATE_ID ='1' WHERE device_id = '" + myInput + "'");
                      con.commit();


                      Statement y = con.createStatement();
                      y.executeUpdate("UPDATE device_handset_t SET CUSTOMER_ID ='' where esn = '" + myInput + "'");
                      con.commit();
                      
                      
                      //Insert new records into AuditTrail
                      con.setAutoCommit(false);
                      Statement z = con.createStatement();
                      z.executeUpdate("insert into ETGAUDITTRAIL(USERID, TRANSACTION, TDATE, TRANSTYPE) VALUES( '" + MainMenu.mnUserID + "', '" + myInput + "', '" + dateNow + "' ,'ETG ESN Clean-up')");
                      con.commit();
                      z.close();

                      btnCleanUp.setEnabled(false);
                      chkForceCleanup.setSelected(false);
                      optCustOwn.setSelected(false);
                      JOptionPane.showMessageDialog(null, "ETG Own Clean-up Completed");
                      txtESN.setText("");
                      txtESN.requestFocus();
                      //btnFind.setEnabled(true);

                        s.close();
           

                    }
                    catch(SQLException e){
                       System.out.println(e.getMessage());
                    }

                }
                else {
                    try{

                       if (myState=="2"){
                           JOptionPane.showMessageDialog(null, "The ESN is Assigned");

                       }
                       else {
                          con.setAutoCommit(false);
                          Statement s = con.createStatement();
                          s.executeUpdate("UPDATE device_t SET STATE_ID ='1' WHERE device_id = '" + myInput + "'");
                          con.commit();


                          Statement y = con.createStatement();
                          y.executeUpdate("UPDATE device_handset_t SET CUSTOMER_ID ='' where esn = '" + myInput + "'");
                          con.commit();

                          //Insert new records into AuditTrail
                          con.setAutoCommit(false);
                          Statement z = con.createStatement();
                          z.executeUpdate("insert into ETGAUDITTRAIL(USERID, TRANSACTION, TDATE, TRANSTYPE) VALUES( '" + MainMenu.mnUserID + "', '" + myInput + "', '" + dateNow + "' ,'ETG ESN Clean-up')");
                          con.commit();
                          z.close();
                          
                          btnCleanUp.setEnabled(false);
                          chkForceCleanup.setSelected(false);
                          optCustOwn.setSelected(false);
                          JOptionPane.showMessageDialog(null, "ETG Own Clean-up Completed");
                          txtESN.setText("");
                          txtESN.requestFocus();
                          //btnFind.setEnabled(true);
                            s.close();
            
                      }
                    }
                    catch(SQLException e){
                       System.out.println(e.getMessage());
                    }

                }
            }
          
      }      
    }//GEN-LAST:event_btnCleanUpActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
          
        try{
             con.close();
             cnn=null;
             setVisible(false);
             dispose();
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try{
           con.close();
           cnn=null;
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ESNCleaning().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCleanUp;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnFind;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkForceCleanup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JRadioButton optCustOwn;
    private javax.swing.JRadioButton optETGOwn;
    private javax.swing.JTextField txtESN;
    // End of variables declaration//GEN-END:variables
}
