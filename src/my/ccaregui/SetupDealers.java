/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SetupDealers.java
 *
 * Created on Feb 7, 2013, 7:37:08 AM
 */
package my.ccaregui;

/**
 *
 * @author Expresso BRM
 */

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.*;
import javax.swing.table.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class SetupDealers extends javax.swing.JFrame {
    ConnectDB cnn = new ConnectDB();
    Connection con =  cnn.getConnection();
    /** Creates new form SetupDealers */
    public SetupDealers() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtDealerName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DealerList = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30));
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SETUP DEALERS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(3, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel2.setText("Code Number");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel3.setText("Dealer Name");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel4.setText("Email Address");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel5.setText("Telephone Number");

        txtCode.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtCode.setForeground(new java.awt.Color(51, 0, 102));
        txtCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeActionPerformed(evt);
            }
        });

        txtDealerName.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtDealerName.setForeground(new java.awt.Color(51, 0, 102));
        txtDealerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDealerNameActionPerformed(evt);
            }
        });

        txtEmail.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtEmail.setForeground(new java.awt.Color(51, 0, 102));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtPhone.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtPhone.setForeground(new java.awt.Color(51, 0, 102));
        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        DealerList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Dealer Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DealerList.setEnabled(false);
        jScrollPane1.setViewportView(DealerList);
        DealerList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14));
        jLabel6.setText("Location");

        txtLocation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtLocation.setForeground(new java.awt.Color(51, 0, 102));
        txtLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModify)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(412, 412, 412))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(91, 91, 91))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDealerName, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(txtEmail)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(412, 412, 412))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(431, 431, 431))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDealerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnNew)
                    .addComponent(btnModify)
                    .addComponent(btnUpdate)
                    .addComponent(btnCancel)
                    .addComponent(btnFind))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClose))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, 0, 473, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void txtCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtCodeActionPerformed

private void txtDealerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDealerNameActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtDealerNameActionPerformed

private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtEmailActionPerformed

private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtPhoneActionPerformed

private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:
    try{
//           setLocationRelativeTo(null);
//           //btnModify.setEnabled(false);
//           btnSave.setEnabled(false);
//           btnUpdate.setEnabled(false);
//           //btnCancel.setEnabled(false);
//           
//          txtCode.setEnabled(false);
//          txtDealerName.setEnabled(false);
//          txtEmail.setEnabled(false);
//          txtPhone.setEnabled(false);
//          
//          Statement s;
//          s = con.createStatement();
//
//          String select = "SELECT Code, DName from ETGDealers";
//          ResultSet row;
//          row = s.executeQuery(select);
//          DealerList.setModel(DbUtils.resultSetToTableModel(row));
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_formWindowActivated

private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
    if (con==null){
          ConnectDB cnn = new ConnectDB();
          Connection con =  cnn.getConnection();
         } 
    try
        {
             if (txtCode.getText().length()>10){
                 JOptionPane.showMessageDialog(null, "Code Number can't be more than 10 digits");
                   txtCode.requestFocus();
             }
             else if (txtCode.getText().length()<1){
                 JOptionPane.showMessageDialog(null, "Code Number can't be empty");
                   txtCode.requestFocus();
             }
             else if (txtDealerName.getText().length()>30){
                 JOptionPane.showMessageDialog(null, "Dealer Name can't more than 30 digits");
                   txtDealerName.requestFocus();
             }
             else if (txtDealerName.getText().length()<1){
                 JOptionPane.showMessageDialog(null, "Dealer Name can't be empty");
                   txtDealerName.requestFocus();
             }
             else if (txtEmail.getText().length()>50){
                 JOptionPane.showMessageDialog(null, "Email Address can't more than 50 digits");
                   txtEmail.requestFocus();
             }
             else if (txtPhone.getText().length()>12){
                 JOptionPane.showMessageDialog(null, "Phone number can't more than 50 digits");
                   txtPhone.requestFocus();
             }
             else if (txtLocation.getText().length()>30){
                 JOptionPane.showMessageDialog(null, "Location can't more than 30 digits");
                   txtLocation.requestFocus();
             }
             else if (txtLocation.getText().length()<1){
                 JOptionPane.showMessageDialog(null, "Location can't be empty");
                   txtLocation.requestFocus();
             }
             else {
                 //Check for Duplicate code numbers
                  String myInput =txtCode.getText().trim();
                  Statement s = con.createStatement();
                  String select = "SELECT Code from ETGDealers where Code ='" + myInput + "'";
                  ResultSet rows;
                  rows = s.executeQuery(select);

                  int cnt1=0;
                  while (rows.next()) {
                      cnt1++; 
                  }
                  if (cnt1>0){
                      JOptionPane.showMessageDialog(null, "Code Number already exist");
                      txtCode.requestFocus();
                  }
                  else {
                          
                      //Check for Duplicate dealer names
                      Statement y = con.createStatement();
                      String select2 = "SELECT DName from ETGDealers where DName ='" + txtDealerName.getText().toUpperCase() + "'";
                      ResultSet rows2;
                      rows2 = y.executeQuery(select2);

                      int cnt=0;
                      while (rows2.next()) {
                          cnt++; 
                      }
                      if (cnt>0){
                          JOptionPane.showMessageDialog(null, "Dealer name already exist");
                          txtDealerName.requestFocus();
                      }

                      else{
                          //Insert new records into table

                          con.setAutoCommit(false);
                          Statement z = con.createStatement();
                          z.executeUpdate("insert into ETGDealers(CODE, DNAME, EMAIL, PHONE, LOCATION) VALUES('" + txtCode.getText().trim() + "','" + txtDealerName.getText().toUpperCase().trim() + "','" + txtEmail.getText().trim() + "','" + txtPhone.getText().trim() + "','" + txtLocation.getText().toUpperCase().trim() + "')");
                          con.commit();
                          z.close();

                          Clear();

                          Statement sS;
                          sS = con.createStatement();

                          String select1 = "SELECT Code, DName from ETGDealers";
                          ResultSet row;
                          row = sS.executeQuery(select1);
                          DealerList.setModel(DbUtils.resultSetToTableModel(row));
                      }

                  }
              
             }
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnSaveActionPerformed

private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
    if (con==null){
          ConnectDB cnn = new ConnectDB();
          Connection con =  cnn.getConnection();
         }     
    try
        {
             String strInp = JOptionPane.showInputDialog(null, "Enter Code Number : ","",1);
             Statement s = con.createStatement();
             String select = "Select Code, DName, EMail, Phone, Location from ETGDealers where Code = '" + strInp.trim() + "'";
             ResultSet rows;
             rows = s.executeQuery(select);
          
          
              int cnt=0;
              while (rows.next()) {
                  cnt++; 
                  txtCode.setText(String.valueOf(rows.getString(1)));
                  txtDealerName.setText(String.valueOf(rows.getString(2)));
                  txtEmail.setText(String.valueOf(rows.getString(3)));
                  txtPhone.setText(String.valueOf(rows.getString(4)));
                  txtLocation.setText(String.valueOf(rows.getString(5)));
              }
             s.close();
             rows.close();
             if (cnt<1){
                  JOptionPane.showMessageDialog(null, "Record not found");
              }
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnFindActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    if (con==null){
          ConnectDB cnn = new ConnectDB();
          Connection con =  cnn.getConnection();
         } 
    try{
             if(txtCode.getText().length()<1){
                 JOptionPane.showMessageDialog(null, "Record to delete");
             }
             else{
                      con.setAutoCommit(false);
                      
                      Statement s = con.createStatement();
                      s.executeUpdate("delete from ETGDealers where Code = '" + txtCode.getText().trim() + "'");
                      con.commit();
                      
                       txtCode.setText("");
                       txtDealerName.setText("");
                       txtEmail.setText("");
                       txtPhone.setText("");
                       txtLocation.setText("");
                       txtCode.requestFocus();
                       Clear();
                       
                      Statement sS;
                      sS = con.createStatement();

                      String select1 = "SELECT Code, DName from ETGDealers";
                      ResultSet row;
                      row = sS.executeQuery(select1);
                      DealerList.setModel(DbUtils.resultSetToTableModel(row));
             }
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
    try{
             con.close();
             cnn=null;
             setVisible(false);
             dispose();
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnCloseActionPerformed

private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
// TODO add your handling code here:
    try{
           txtCode.setEnabled(true);
           txtDealerName.setEnabled(true);
           txtEmail.setEnabled(true);
           txtPhone.setEnabled(true);
           txtLocation.setEnabled(true);
           
           txtCode.setText("");
           txtDealerName.setText("");
           txtEmail.setText("");
           txtPhone.setText("");
           txtLocation.setText("");
           txtCode.requestFocus();
           
           btnNew.setEnabled(false);
           btnModify.setEnabled(false);
           btnSave.setEnabled(true);
           btnUpdate.setEnabled(false);
           btnFind.setEnabled(false);
           btnDelete.setEnabled(false);
          
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnNewActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    try{
           setLocationRelativeTo(null);
           //btnModify.setEnabled(false);
           btnSave.setEnabled(false);
           btnUpdate.setEnabled(false);
           //btnCancel.setEnabled(false);
           
          txtCode.setEnabled(false);
          txtDealerName.setEnabled(false);
          txtEmail.setEnabled(false);
          txtPhone.setEnabled(false);
          txtLocation.setEnabled(false);
          
          Statement s;
          s = con.createStatement();

          String select = "SELECT Code, DName from ETGDealers";
          ResultSet row;
          row = s.executeQuery(select);
          DealerList.setModel(DbUtils.resultSetToTableModel(row));
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_formWindowOpened

private void Clear(){
    try{
           
           btnCancel.setEnabled(true);
           btnNew.setEnabled(true);
           btnDelete.setEnabled(true);
           btnFind.setEnabled(true);
           btnModify.setEnabled(true);
           btnSave.setEnabled(false);
           btnUpdate.setEnabled(false);
           
           
           
           
          txtCode.setEnabled(false);
          txtDealerName.setEnabled(false);
          txtEmail.setEnabled(false);
          txtPhone.setEnabled(false);
          txtLocation.setEnabled(false);
          
           
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}
private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    try{
           txtCode.setText("");
           txtDealerName.setText("");
           txtEmail.setText("");
           txtPhone.setText("");
           txtLocation.setText("");
           txtCode.requestFocus();
           Clear();
          
           
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnCancelActionPerformed

private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
    
    try{
             if(txtCode.getText().length()<1){
                 JOptionPane.showMessageDialog(null, "Record to modify");
             }
             else{
                     
                         
                           txtDealerName.setEnabled(false);
                           txtEmail.setEnabled(true);
                           txtPhone.setEnabled(true);
                           txtLocation.setEnabled(true);
                          
                           txtEmail.requestFocus();

                           btnNew.setEnabled(false);
                           btnModify.setEnabled(false);
                           btnSave.setEnabled(false);
                           btnUpdate.setEnabled(true);
                           btnFind.setEnabled(false);
                           btnDelete.setEnabled(false);
                     
             }
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnModifyActionPerformed

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    if (con==null){
          ConnectDB cnn = new ConnectDB();
          Connection con =  cnn.getConnection();
         } 
    try{
           
//         if (txtDealerName.getText().length()>30){
//             JOptionPane.showMessageDialog(null, "Dealer Name can't more than 30 digits");
//               txtDealerName.requestFocus();
//         }
//         else if (txtDealerName.getText().length()<1){
//             JOptionPane.showMessageDialog(null, "Dealer Name can't be empty");
//               txtDealerName.requestFocus();
//         }
//         else 
             
         if (txtEmail.getText().length()>50){
             JOptionPane.showMessageDialog(null, "Email Address can't more than 50 digits");
               txtEmail.requestFocus();
         }
         else if (txtPhone.getText().length()>12){
             JOptionPane.showMessageDialog(null, "Phone number can't more than 50 digits");
               txtPhone.requestFocus();
         }
          else if (txtLocation.getText().length()<1){
                 JOptionPane.showMessageDialog(null, "Location can't be empty");
                  txtLocation.requestFocus();
             }
         else { 

              con.setAutoCommit(false);
              String myInput = txtCode.getText().trim();
              Statement s = con.createStatement();
              s.executeUpdate("UPDATE ETGDealers set EMail='" + txtEmail.getText() + "', Phone='" + txtPhone.getText() + "' , Location='" + txtLocation.getText().toUpperCase().trim() + "' where Code = '" + myInput + "'");
              con.commit();
              
              Statement ss;
              ss = con.createStatement();

              String select = "SELECT Code, DName from ETGDealers";
              ResultSet row;
              row = ss.executeQuery(select);
              DealerList.setModel(DbUtils.resultSetToTableModel(row));
              
              Clear();
         }
                 
           
        }
        catch(Exception e){
           System.out.println(e.getMessage());
        }
}//GEN-LAST:event_btnUpdateActionPerformed

private void txtLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocationActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtLocationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetupDealers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetupDealers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetupDealers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetupDealers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SetupDealers().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DealerList;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtDealerName;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
